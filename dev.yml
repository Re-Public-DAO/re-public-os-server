version: '3'

volumes:
  republic_os_local_postgres_data: {}
  republic_os_local_postgres_data_backups: {}
#  republic_os_local_perkeep_data: {}
#  republic_os_local_dolt: {}
  republic_os_local_raw_data: {}
  republic_os_local_metabase_db: {}
  republic_os_local_zerotier_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: republic_os_local_django
    container_name: republic_os_local_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
      - /var/run/docker.sock:/var/run/docker.sock
#      - republic_os_local_perkeep_data:/perkeep
      - republic_os_local_raw_data:/re_public_os_raw_data
      - republic_os_local_zerotier_data:/var/lib/zerotier-one
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
      - ./.envs/.local/.republic_os
      - ./.env
    ports:
      - "8000:8000"
    command: /start
    networks:
      - re_public_os

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: republic_os_production_postgres
    container_name: republic_os_local_postgres
    volumes:
      - republic_os_local_postgres_data:/var/lib/postgresql/data
      - republic_os_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5432:5432"
    networks:
      - re_public_os

  docs:
    image: republic_os_local_docs
    container_name: republic_os_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./republic_os:/app/republic_os:z
    ports:
      - "9001:9001"
    command: /start-docs
    networks:
      - re_public_os

  redis:
    image: redis:6
    container_name: republic_os_local_redis
    networks:
      - re_public_os

  celeryworker:
    <<: *django
    image: republic_os_local_celeryworker
    container_name: republic_os_local_celeryworker
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: republic_os_local_celerybeat
    container_name: republic_os_local_celerybeat
    depends_on:
      - redis
      - postgres
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: republic_os_local_flower
    container_name: republic_os_local_flower
    ports:
      - "5555:5555"
    command: /start-flower

#  perkeep:
#    build:
#        context: .
#        dockerfile: ./compose/local/perkeep/Dockerfile
#    image: republic_os_local_perkeep
#    container_name: republic_os_local_perkeep
#    volumes:
#      - republic_os_local_perkeep_data:/user_data
#    ports:
#      - "8080:8080"
#      - "3179:3179"
#    env_file:
#      - ./.env

#  dolt:
#    image: dolthub/dolt-sql-server:latest
#    ports:
#      - "3307:3306"
##    env_file:
##      - ./.env
#    volumes:
#      - republic_os_local_dolt:/var/lib/dolt
##      - ./compose/local/dolt/server_config:/etc/dolt/servercfg.d
#    networks:
#      - re_public_os

#  metabase:
#    image: metabase/metabase
#    container_name: republic_os_local_metabase
#    ports:
#        - "3008:3000"
#    volumes:
#        - republic_os_local_metabase_db:/metabase.db
#    networks:
#        - re_public_os

  zerotier:
    build:
        context: .
        dockerfile: ./compose/local/zerotier/Dockerfile
    container_name: republic_os_local_zerotier
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    env_file:
      - ./.env
    devices:
        - /dev/net/tun
    ports:
      - "9993:9993/udp"
      - "9993:9993/tcp"
    networks:
        - re_public_os
    volumes:
      - ./compose/local/zerotier/shared_data:/var/lib/zerotier-one/shared_data
      - republic_os_local_zerotier_data:/var/lib/zerotier-one


networks:
  re_public_os:
    external: true
